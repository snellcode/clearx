{"version":3,"file":"clearx.esm.js","sources":["../src/id.js","../src/object-utils.js","../src/segment-helper.js","../src/segment.js","../src/data-observer.js","../src/main.js"],"sourcesContent":["let counter = 0\n\nlet generate = () => {\n  counter += 1\n  return `clearx-${counter}`\n}\n\nexport default generate\n","import deepmerge from 'deepmerge'\nimport equal from 'fast-deep-equal'\n\nconst toNumber = (val) => {\n  if (!isNaN(val)) {\n    return val * 1\n  }\n  return val\n}\n\nconst assign = (obj, key, val) => {\n  if (hasEqual(obj[key], val)) return false\n  obj[key] = val\n  return obj[key] === val\n}\n\nexport const freezeObject = (obj) => {\n  if (Object.freeze) Object.freeze(obj)\n  return obj\n}\n\nexport const hasEqual = (obj1, obj2) => {\n  return obj1 !== undefined && equal(obj1, obj2)\n}\n\nexport const split = (path, seperator = '.', escape = '\\\\') => {\n  if (!path) return []\n  if (Array.isArray(path)) return path\n  const keys = []\n  let key = ''\n  for (let i = 0, l = path.length; i < l; ++i) {\n    const charKey = path[i]\n    if ((charKey === seperator) && (path[i - 1] !== escape)) {\n      if (key.length > 0) {\n        keys.push(toNumber(key))\n      }\n      key = ''\n    } else {\n      if (charKey !== escape) {\n        key += path[i]\n      }\n    }\n  }\n  if (key.length > 0) {\n    keys.push(toNumber(key))\n  }\n  return keys\n}\n\nexport const get = (obj, keys, defaultValue) => {\n  if (obj === undefined) return defaultValue\n  if (!keys || keys.length === 0) {\n    return obj\n  }\n  keys = split(keys)\n  let [key, ...remaining] = keys\n  if (!isNaN(key)) {\n    key *= 1\n  }\n  return get(obj[key], remaining, defaultValue)\n}\n\nexport const set = (obj, keys, value, dontReplace) => {\n  let isDataUpdated = false\n\n  if (obj === undefined) return [false, isDataUpdated]\n  if (!keys || keys.length === 0) return [false, isDataUpdated]\n\n  keys = split(keys)\n  const [key, next, ...remaining] = keys\n  if (next !== undefined) {\n    if (!obj.hasOwnProperty(key)) {\n      const val = !isNaN(next) ? [] : {}\n      isDataUpdated = assign(obj, key, val)\n    }\n    const [_, __] = set(obj[key], [next, ...remaining], value, dontReplace)\n    return [_, __ || isDataUpdated]\n  } else {\n    if (obj.hasOwnProperty(key) && dontReplace) return [true, isDataUpdated]\n    isDataUpdated = assign(obj, key, value)\n    return [true, isDataUpdated]\n  }\n}\n\nexport const has = (obj, keys) => {\n  const value = get(obj, keys)\n  if (value === undefined) return false\n  return true\n}\n\nexport const ensureExists = (obj, keys, value = null) => {\n  return set(obj, keys, value, true)\n}\n\nconst arrayMethods = ['push', 'pop', 'splice', 'shift', 'unshift', 'sort', 'slice']\n\nexport const arrayOps = (obj, keys, method, ...args) => {\n  if (arrayMethods.indexOf(method) === -1) return false\n  let arr = get(obj, keys)\n  if (!Array.isArray(arr)) {\n    arr = []\n    set(obj, keys, arr)\n  }\n  let val\n  try {\n    val = arr[method].apply(arr, args)\n  } catch (ex) {\n    // Probably freeze!\n  }\n  return [true, true, val]\n}\n\nexport const push = (obj, keys, ...values) => {\n  return arrayOps(obj, keys, 'push', ...values)\n}\n\nexport const insert = (obj, keys, value, at) => {\n  if (at === undefined) {\n    return push(obj, keys, value)\n  }\n  return arrayOps(obj, keys, 'splice', at, 0, value)\n}\n\nexport const unshift = (obj, keys, ...args) => {\n  return arrayOps(obj, keys, 'unshift', ...args)\n}\n\nexport const pop = (obj, keys) => {\n  return arrayOps(obj, keys, 'pop')\n}\n\nexport const shift = (obj, keys) => {\n  return arrayOps(obj, keys, 'shift')\n}\n\nexport const splice = (obj, keys, ...args) => {\n  return arrayOps(obj, keys, 'splice', ...args)\n}\n\nexport const slice = (obj, keys, ...args) => {\n  const result = arrayOps(obj, keys, 'slice', ...args)\n  return result[2]\n}\n\nexport const sort = (obj, keys, ...args) => {\n  return arrayOps(obj, keys, 'sort', ...args)\n}\n\nexport const increment = (obj, keys, by = 1) => {\n  let val = get(obj, keys) * 1\n  if (isNaN(val)) {\n    val = 0\n  }\n  val += by\n  return set(obj, keys, val)\n}\n\nexport const decrement = (obj, keys, by = 1) => {\n  return increment(obj, keys, by * -1)\n}\n\nexport const toggle = (obj, keys) => {\n  const existing = !!get(obj, keys)\n  return set(obj, keys, !existing)\n}\n\nexport const empty = (obj, keys) => {\n  let isDataUpdated = false\n  const value = get(obj, keys)\n  if (value === undefined) return [true, isDataUpdated]\n  let finalValue\n  switch (true) {\n    case typeof value === 'string':\n      finalValue = ''\n      break\n    case typeof value === 'number':\n      finalValue = 0\n      break\n    case typeof value === 'boolean':\n      finalValue = false\n      break\n    case Array.isArray(value):\n      value.length = 0\n      return [true, value.length === 0]\n    case typeof value === 'object':\n      for (const i in value) {\n        if (value.hasOwnProperty(i)) {\n          isDataUpdated = delete value[i] || isDataUpdated\n        }\n      }\n      return [true, isDataUpdated]\n  }\n  return set(obj, keys, finalValue)\n}\n\nexport const coalesce = (obj, keysArr, defaultValue) => {\n  for (let i = 0, l = keysArr.length; i < l; ++i) {\n    const val = get(obj, keysArr[i])\n    if (val !== undefined && val !== null) {\n      return val\n    }\n  }\n  return defaultValue\n}\n\nexport const del = (obj, keys) => {\n  let isDataUpdated = false\n  if (obj === undefined) return [false, isDataUpdated]\n  if (!keys || keys.length === 0) return [false, isDataUpdated]\n  keys = split(keys)\n  const [key, ...remaining] = keys\n  if (keys.length === 1) {\n    if (Array.isArray(obj) && !isNaN(key)) {\n      const len = obj.length\n      obj.splice(key, 1)\n      isDataUpdated = len !== obj.length\n    } else if (obj.hasOwnProperty(key)) {\n      isDataUpdated = delete obj[key]\n    }\n    return [true, isDataUpdated]\n  } else {\n    return del(obj[key], [...remaining])\n  }\n}\n\nexport const merge = (obj, keys, data) => {\n  ensureExists(obj, keys, Array.isArray(data) ? [] : {})\n  const current = get(obj, keys)\n  const merged = deepmerge(current, data)\n  return set(obj, keys, merged)\n}\n\nexport const isEqual = (obj, keys, data) => {\n  const current = get(obj, keys)\n  return equal(current, data)\n}\n","import { split, freezeObject } from './object-utils'\nimport deepmerge from 'deepmerge'\n\nclass SegmentHelper {\n  constructor (paths, delimiter = '.', store, dataObserver) {\n    this.paths = paths\n    this.delimiter = delimiter\n    this.store = store\n    this.dataObserver = dataObserver\n    this.components = []\n    this._afterUpdateEvents = []\n    this._dataTransformers = []\n  }\n\n  get keys () {\n    const paths = this.paths\n    if (Array.isArray(paths)) return paths\n    let keys = []\n    if (typeof paths === 'string') {\n      keys = [split(paths, this.delimiter)]\n    } else if (paths.toString() === '[object Object]') {\n      for (const key in paths) {\n        if (!paths.hasOwnProperty(key)) continue\n        keys.push(split(paths[key], this.delimiter))\n      }\n    } else {\n      return paths\n    }\n    return keys\n  }\n\n  observe (force) {\n    if (this.components.length === 0 && !force) return\n    if (this.cancelObserver) return\n\n    const observer = this.dataObserver\n    const keys = this.keys\n    const listener = this.updateComponents.bind(this)\n    this.cancelDataListener = observer.attachObserver(keys, listener)\n  }\n\n  unobserve () {\n    if (!this.cancelDataListener) return\n    this.cancelDataListener()\n    delete this.cancelDataListener\n  }\n\n  listenUnmount (component, onUnmount) {\n    if (Array.isArray(component)) return () => {}\n    const componentWillUnmount = component.componentWillUnmount\n    component.componentWillUnmount = () => {\n      onUnmount()\n      if (typeof this.componentWillUnmount === 'function') {\n        this.componentWillUnmount.call(component)\n      }\n    }\n    component.componentWillUnmount.__original = componentWillUnmount\n  }\n\n  unlistenUnmount (component) {\n    const componentWillUnmount = component.componentWillUnmount\n    if (!componentWillUnmount) return\n    const original = component.componentWillUnmount.__original\n    if (!original) return\n    component.componentWillUnmount = original\n  }\n\n  dataTransformer (func) {\n    if (typeof func === 'function') {\n      this._dataTransformers.push(func)\n      this.updateComponents()\n      return () => {\n        const idx = this._dataTransformers.indexOf(func)\n        if (idx > -1) this._dataTransformers.splice(idx, 1)\n      }\n    }\n    return () => {}\n  }\n\n  get dataTransformers () {\n    return this._dataTransformers.slice(0)\n  }\n\n  applyDataTransformers (data) {\n    this._dataTransformers.forEach((func) => {\n      try {\n        data = func(data)\n      } catch (ex) {\n        console.log(func, 'failing to transform', data)\n      }\n    })\n    return data\n  }\n\n  updateData () {\n    let data = {}\n    let paths = this.paths\n\n    if (typeof paths === 'string') {\n      paths = split(paths, this.delimiter)\n      data = this.store.get(paths)\n    } else if (Array.isArray(paths)) {\n      data = paths.map((path) => {\n        const key = split(path, this.delimiter)\n        return this.store.get(key)\n      })\n    } else {\n      for (const key in paths) {\n        const path = split(paths[key], this.delimiter)\n        data[key] = this.store.get(path)\n      }\n    }\n\n    data = this.applyDataTransformers(data)\n\n    if (typeof data === 'object') {\n      data = freezeObject(deepmerge({}, data))\n    }\n\n    this._data = data\n  }\n\n  get data () {\n    if (!this._data) {\n      this.updateData()\n    }\n    return this._data\n  }\n\n  updateComponents () {\n    this.updateData()\n    this.components.forEach((component) => {\n      this.assignState(component)\n    })\n    this.executeAfterUpdate()\n  }\n\n  assignStateFC (component, initialAssignment) {\n    let setState\n    if (Array.isArray(component)) {\n      setState = component[1]\n    }\n    if (!setState) return\n    if (initialAssignment) return true\n    component[0] = this._data\n    setState(this._data)\n    return true\n  }\n\n  assignStateCC (component, initialAssignment) {\n    if (typeof component.setState !== 'function') return\n    if (initialAssignment) {\n      component.state = component.state || {}\n      component.state.store = component.state.store || {}\n      component.state.store = {\n        ...component.state.store,\n        ...this.data\n      }\n    } else {\n      component.setState({\n        ...component.state,\n        store: {\n          ...component.state.store,\n          ...this.data\n        }\n      })\n    }\n    return true\n  }\n\n  assignStateOthers (component) {\n    if (typeof component === 'object') {\n      component.data = this.data\n    }\n  }\n\n  assignState (component, initial = false) {\n    const updatedSC = this.assignStateFC(component, initial)\n    const updatedCC = this.assignStateCC(component, initial)\n    if (!updatedSC && !updatedCC) {\n      this.assignStateOthers(component, initial)\n    }\n  }\n\n  onUpdate (func) {\n    if (typeof func === 'function') {\n      this._afterUpdateEvents.push(func)\n      return () => {\n        const idx = this._afterUpdateEvents.indexOf(func)\n        if (idx > -1) this._afterUpdateEvents.splice(idx, 1)\n      }\n    }\n    return () => {}\n  }\n\n  get afterUpdateEvents () {\n    return this._afterUpdateEvents.slice(0)\n  }\n\n  executeAfterUpdate () {\n    this._afterUpdateEvents.forEach((func) => {\n      try {\n        func(this.data)\n      } catch (ex) {\n        console.log(ex)\n      }\n    })\n  }\n\n  get hasDataListener () {\n    return !!this.cancelDataListener\n  }\n\n  addMark (component, mark) {\n    let comp = component\n    if (Array.isArray(component)) {\n      comp = component[1]\n    }\n    comp.__segment = mark\n  }\n\n  removeMark (component) {\n    let comp = component\n    if (Array.isArray(component)) {\n      comp = component[1]\n    }\n    delete comp.__segment\n  }\n}\n\nexport default SegmentHelper\n","import identifier from './id'\nimport SegmentHelper from './segment-helper'\n\nclass Segment {\n  constructor (paths, id, delimiter, store, dataObserver) {\n    this.id = id || identifier()\n    this.paths = paths\n\n    this._helper = new SegmentHelper(paths, delimiter, store, dataObserver)\n\n    this.delimiter = delimiter\n    this.store = store\n    this.dataObserver = dataObserver\n  }\n\n  findComponent (search) {\n    if (!this._helper) return -1\n    if (Array.isArray(search)) {\n      search = search[1]\n    }\n    const components = this._helper.components\n    for (let i = 0; i < components.length; i++) {\n      let component = components[i]\n      if (Array.isArray(component)) {\n        component = component[1]\n      }\n      if (search === component) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  get data () {\n    if (!this._helper) return {}\n    return this._helper.data\n  }\n\n  get components () {\n    if (!this._helper) return []\n    return this._helper.components.slice(0)\n  }\n\n  get active () {\n    if (!this._helper) return false\n    return this._helper.hasDataListener\n  }\n\n  get afterUpdateEvents () {\n    if (!this._helper) return []\n    return this._helper.afterUpdateEvents\n  }\n\n  get dataTransformers () {\n    if (!this._helper) return []\n    return this._helper.dataTransformers\n  }\n\n  link (component) {\n    if (!component) return {}\n    const helper = this._helper\n    if (!helper) return {}\n    const store = this.store\n    const unlink = store._unlinkComponentFromAllSegments.bind(store, component)\n    const result = [this.data, unlink]\n    if (this.findComponent(component) > -1) return result\n    helper.components.push(component)\n    helper.observe(this.keepSyncing)\n    helper.addMark(component, this)\n    helper.listenUnmount(component, unlink)\n    helper.assignState(component, true)\n    return result\n  }\n\n  unlink (component) {\n    if (!component) return false\n    const helper = this._helper\n    if (!helper) return false\n    const idx = this.findComponent(component)\n    if (idx > -1) {\n      helper.removeMark(component)\n      helper.components.splice(idx, 1)\n      helper.unlistenUnmount(component)\n    }\n    if ((helper.components.length === 0) && !this.keepSyncing) {\n      helper.unobserve()\n    }\n    return idx > -1\n  }\n\n  sync (on = true) {\n    if (!this._helper) return false\n    this.keepSyncing = on\n    if (on && !this.active) {\n      this._helper.observe(true)\n    }\n    if (!on && this.active) {\n      this._helper.unobserve()\n    }\n    return true\n  }\n\n  unlinkAll () {\n    if (!this._helper) return false\n    this._helper.components.forEach(this.unlink.bind(this))\n    return true\n  }\n\n  onUpdate (func) {\n    if (!this._helper) return () => {}\n    return this._helper.onUpdate(func)\n  }\n\n  dataTransformer (func) {\n    if (!this._helper) return () => {}\n    return this._helper.dataTransformer(func)\n  }\n\n  teardown () {\n    if (!this._helper) return true\n    this.unlinkAll()\n    this._helper.unobserve()\n    delete this._helper\n    delete this.dataObserver\n    this.store.removeSegment(this)\n    return true\n  }\n}\n\nexport default Segment\n","import { split } from './object-utils'\nclass DataObserver {\n  constructor (store) {\n    this.store = store\n    this.listeners = {}\n    this.counter = 0\n  }\n\n  attachObserver (keys, listener) {\n    if (!listener) return\n    if (!keys || keys.length === 0) return\n    ++this.counter\n    const id = `data-slice:${this.counter}`\n    this.listeners[id] = {\n      keys,\n      listener\n    }\n    return () => {\n      delete this.listeners[id]\n    }\n  }\n\n  dataUpdatedAt (changedKey) {\n    const seperator = '>>'\n    const targets = []\n    const changedPath = split(changedKey).join(seperator)\n    for (const id in this.listeners) {\n      let { keys, listener } = this.listeners[id]\n      keys = keys.filter((key) => {\n        const keyPath = split(key).join(seperator)\n        return keyPath.startsWith(changedPath) || changedPath.startsWith(keyPath)\n      })\n      if (keys.length > 0) targets.push([keys, listener])\n    }\n    targets.forEach(([keys, listener]) => {\n      try {\n        listener(keys)\n      } catch (ex) {\n        console.log('Error updating', listener, keys)\n      }\n    })\n  }\n\n  teardown () {\n    this.listeners = {}\n  }\n}\nexport default DataObserver\n","import Segment from './segment'\nimport DataObserver from './data-observer'\nimport { sort, get, set, coalesce, empty, insert, push, pop, shift, splice, unshift, ensureExists, del, has, merge, increment, decrement, toggle, isEqual, slice } from './object-utils'\n\nexport class ClearX {\n  constructor (data) {\n    this.data = data\n    this.segments = []\n    this.dataObserver = new DataObserver(this)\n    this.delimiter = '.'\n    this.onUpdateEvents = []\n  }\n\n  triggerEvents (key) {\n    this.dataObserver.dataUpdatedAt(key)\n  }\n\n  executeUtil (key, [status, changed, value]) {\n    if (changed) {\n      this.triggerEvents(key)\n    }\n    this.executeOnUpdateEvents(changed, key)\n    return status\n  }\n\n  get (key, defaultValue) {\n    return get(this.data, key, defaultValue)\n  }\n\n  set (key, value, doNotReplace = false) {\n    return this.executeUtil(key, set(this.data, key, value, doNotReplace))\n  }\n\n  coalesce (keys, defaultValue) {\n    return coalesce(this.data, keys, defaultValue)\n  }\n\n  empty (key) {\n    return this.executeUtil(key, empty(this.data, key))\n  }\n\n  insert (key, value, position) {\n    return this.executeUtil(key, insert(this.data, key, value, position))\n  }\n\n  push (key, ...values) {\n    return this.executeUtil(key, push(this.data, key, ...values))\n  }\n\n  unshift (key, ...values) {\n    return this.executeUtil(key, unshift(this.data, key, ...values))\n  }\n\n  pop (key) {\n    return this.executeUtil(key, pop(this.data, key))\n  }\n\n  shift (key) {\n    return this.executeUtil(key, shift(this.data, key))\n  }\n\n  splice (key, ...args) {\n    return this.executeUtil(key, splice(this.data, key, ...args))\n  }\n\n  slice (key, ...args) {\n    return slice(this.data, key, ...args)\n  }\n\n  sort (key, ...args) {\n    return this.executeUtil(key, sort(this.data, key, ...args))\n  }\n\n  ensureExists (key, defaultValue) {\n    return this.executeUtil(key, ensureExists(this.data, key, defaultValue))\n  }\n\n  delete (key) {\n    return this.executeUtil(key, del(this.data, key))\n  }\n\n  has (key) {\n    return has(this.data, key)\n  }\n\n  merge (key, data) {\n    return this.executeUtil(key, merge(this.data, key, data))\n  }\n\n  increment (key, by) {\n    return this.executeUtil(key, increment(this.data, key, by))\n  }\n\n  decrement (key, by) {\n    return this.executeUtil(key, decrement(this.data, key, by))\n  }\n\n  toggle (key) {\n    return this.executeUtil(key, toggle(this.data, key))\n  }\n\n  isEqual (key, value) {\n    return isEqual(this.data, key, value)\n  }\n\n  paths (keys, id) {\n    const segment = new Segment(keys, id, this.delimiter, this, this.dataObserver)\n    this.segments.push(segment)\n    return segment\n  }\n\n  bind (options = {}) {\n    const { to, afterUpdate, id, paths, dataTransformer } = options\n    let component = to\n    if (Array.isArray(component)) {\n      component = to[1]\n    }\n    let segment\n    segment = component.__segment\n    if (segment) {\n      return segment.link(to)\n    }\n    segment = this.paths(paths, id, this.delimiter)\n    segment.onUpdate(afterUpdate)\n    segment.dataTransformer(dataTransformer)\n    const link = segment.link(to)\n\n    if (Array.isArray(to)) {\n      return link\n    }\n    return segment\n  }\n\n  removeSegment (segment) {\n    const index = this.segments.indexOf(segment)\n    if (index > -1) {\n      segment.teardown()\n      this.segments.splice(index, 1)\n      return true\n    }\n    return false\n  }\n\n  onUpdate (func) {\n    if (typeof func === 'function') {\n      this.onUpdateEvents.push(func)\n      return () => {\n        const idx = this.onUpdateEvents.indexOf(func)\n        if (idx > -1) this.onUpdateEvents.splice(idx, 1)\n      }\n    }\n    return () => {}\n  }\n\n  executeOnUpdateEvents (changed, changedKeys) {\n    this.onUpdateEvents.forEach((func) => {\n      try {\n        func(changed, changedKeys, this.data, this)\n      } catch (ex) {\n        console.log('onUpdate', func, changedKeys)\n      }\n    })\n  }\n\n  _unlinkComponentFromAllSegments (component) {\n    this.segments.forEach((segment) => {\n      segment.unlink(component)\n    })\n  }\n\n  teardown () {\n    this.segments.forEach((segment) => {\n      segment.teardown()\n    })\n    this.dataObserver.teardown()\n    delete this.dataObserver\n    this.data = {}\n    return true\n  }\n}\n\n"],"names":["identifier"],"mappings":"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"}