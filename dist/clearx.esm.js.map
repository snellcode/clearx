{"version":3,"file":"clearx.esm.js","sources":["../src/id.js","../src/object-utils.js","../src/segment-helper.js","../src/segment.js","../src/data-observer.js","../src/clearx.js"],"sourcesContent":["let counter = 0\n\nlet generate = () => {\n  counter += 1\n  return `clearx-${counter}`\n}\n\nexport default generate\n","import deepmerge from 'deepmerge'\nimport equal from 'fast-deep-equal'\n\nconst toNumber = (val) => {\n  if (!isNaN(val)) {\n    return val * 1\n  }\n  return val\n}\n\nconst assign = (obj, key, val) => {\n  if (hasEqual(obj[key], val)) return false\n  obj[key] = val\n  return obj[key] === val\n}\n\nexport const freezeObject = (obj) => {\n  if (Object.freeze) Object.freeze(obj)\n  return obj\n}\n\nexport const hasEqual = (obj1, obj2) => {\n  return obj1 !== undefined && equal(obj1, obj2)\n}\n\nexport const split = (path, seperator = '.', escape = '\\\\') => {\n  if (!path) return []\n  if (Array.isArray(path)) return path\n  const keys = []\n  let key = ''\n  for (let i = 0, l = path.length; i < l; ++i) {\n    const charKey = path[i]\n    if ((charKey === seperator) && (path[i - 1] !== escape)) {\n      if (key.length > 0) {\n        keys.push(toNumber(key))\n      }\n      key = ''\n    } else {\n      if (charKey !== escape) {\n        key += path[i]\n      }\n    }\n  }\n  if (key.length > 0) {\n    keys.push(toNumber(key))\n  }\n  return keys\n}\n\nexport const get = (obj, keys, defaultValue) => {\n  if (obj === undefined) return defaultValue\n  if (!keys || keys.length === 0) {\n    return obj\n  }\n  keys = split(keys)\n  let [key, ...remaining] = keys\n  if (!isNaN(key)) {\n    key *= 1\n  }\n  return get(obj[key], remaining, defaultValue)\n}\n\nexport const set = (obj, keys, value, dontReplace) => {\n  let isDataUpdated = false\n\n  if (obj === undefined) return [false, isDataUpdated]\n  if (!keys || keys.length === 0) return [false, isDataUpdated]\n\n  keys = split(keys)\n  const [key, next, ...remaining] = keys\n  if (next !== undefined) {\n    if (!obj.hasOwnProperty(key)) {\n      const val = !isNaN(next) ? [] : {}\n      isDataUpdated = assign(obj, key, val)\n    }\n    const [_, __] = set(obj[key], [next, ...remaining], value, dontReplace)\n    return [_, __ || isDataUpdated]\n  } else {\n    if (obj.hasOwnProperty(key) && dontReplace) return [true, isDataUpdated]\n    isDataUpdated = assign(obj, key, value)\n    return [true, isDataUpdated]\n  }\n}\n\nexport const has = (obj, keys) => {\n  const value = get(obj, keys)\n  if (value === undefined) return false\n  return true\n}\n\nexport const ensureExists = (obj, keys, value = null) => {\n  return set(obj, keys, value, true)\n}\n\nconst arrayMethods = ['push', 'pop', 'splice', 'shift', 'unshift', 'sort', 'slice']\n\nexport const arrayOps = (obj, keys, method, ...args) => {\n  if (arrayMethods.indexOf(method) === -1) return false\n  let arr = get(obj, keys)\n  if (!Array.isArray(arr)) {\n    arr = []\n    set(obj, keys, arr)\n  }\n  let val\n  try {\n    val = arr[method].apply(arr, args)\n  } catch (ex) {\n    // Probably freeze!\n  }\n  return [true, true, val]\n}\n\nexport const push = (obj, keys, ...values) => {\n  return arrayOps(obj, keys, 'push', ...values)\n}\n\nexport const insert = (obj, keys, value, at) => {\n  if (at === undefined) {\n    return push(obj, keys, value)\n  }\n  return arrayOps(obj, keys, 'splice', at, 0, value)\n}\n\nexport const unshift = (obj, keys, ...args) => {\n  return arrayOps(obj, keys, 'unshift', ...args)\n}\n\nexport const pop = (obj, keys) => {\n  return arrayOps(obj, keys, 'pop')\n}\n\nexport const shift = (obj, keys) => {\n  return arrayOps(obj, keys, 'shift')\n}\n\nexport const splice = (obj, keys, ...args) => {\n  return arrayOps(obj, keys, 'splice', ...args)\n}\n\nexport const slice = (obj, keys, ...args) => {\n  const result = arrayOps(obj, keys, 'slice', ...args)\n  return result[2]\n}\n\nexport const sort = (obj, keys, ...args) => {\n  return arrayOps(obj, keys, 'sort', ...args)\n}\n\nexport const increment = (obj, keys, by = 1) => {\n  let val = get(obj, keys) * 1\n  if (isNaN(val)) {\n    val = 0\n  }\n  val += by\n  return set(obj, keys, val)\n}\n\nexport const decrement = (obj, keys, by = 1) => {\n  return increment(obj, keys, by * -1)\n}\n\nexport const toggle = (obj, keys) => {\n  const existing = !!get(obj, keys)\n  return set(obj, keys, !existing)\n}\n\nexport const empty = (obj, keys) => {\n  let isDataUpdated = false\n  const value = get(obj, keys)\n  if (value === undefined) return [true, isDataUpdated]\n  let finalValue\n  switch (true) {\n    case typeof value === 'string':\n      finalValue = ''\n      break\n    case typeof value === 'number':\n      finalValue = 0\n      break\n    case typeof value === 'boolean':\n      finalValue = false\n      break\n    case Array.isArray(value):\n      value.length = 0\n      return [true, value.length === 0]\n    case typeof value === 'object':\n      for (const i in value) {\n        if (value.hasOwnProperty(i)) {\n          isDataUpdated = delete value[i] || isDataUpdated\n        }\n      }\n      return [true, isDataUpdated]\n  }\n  return set(obj, keys, finalValue)\n}\n\nexport const coalesce = (obj, keysArr, defaultValue) => {\n  for (let i = 0, l = keysArr.length; i < l; ++i) {\n    const val = get(obj, keysArr[i])\n    if (val !== undefined && val !== null) {\n      return val\n    }\n  }\n  return defaultValue\n}\n\nexport const del = (obj, keys) => {\n  let isDataUpdated = false\n  if (obj === undefined) return [false, isDataUpdated]\n  if (!keys || keys.length === 0) return [false, isDataUpdated]\n  keys = split(keys)\n  const [key, ...remaining] = keys\n  if (keys.length === 1) {\n    if (Array.isArray(obj) && !isNaN(key)) {\n      const len = obj.length\n      obj.splice(key, 1)\n      isDataUpdated = len !== obj.length\n    } else if (obj.hasOwnProperty(key)) {\n      isDataUpdated = delete obj[key]\n    }\n    return [true, isDataUpdated]\n  } else {\n    return del(obj[key], [...remaining])\n  }\n}\n\nexport const merge = (obj, keys, data) => {\n  ensureExists(obj, keys, Array.isArray(data) ? [] : {})\n  const current = get(obj, keys)\n  const merged = deepmerge(current, data)\n  return set(obj, keys, merged)\n}\n\nexport const isEqual = (obj, keys, data) => {\n  const current = get(obj, keys)\n  return equal(current, data)\n}\n","import { split, freezeObject } from './object-utils'\nimport deepmerge from 'deepmerge'\n\nclass SegmentHelper {\n  constructor (paths, delimiter = '.', store, dataObserver) {\n    this.paths = paths\n    this.delimiter = delimiter\n    this.store = store\n    this.dataObserver = dataObserver\n    this.components = []\n    this._afterUpdateEvents = []\n    this._dataTransformers = []\n  }\n\n  get keys () {\n    const paths = this.paths\n    if (Array.isArray(paths)) return paths\n    let keys = []\n    if (typeof paths === 'string') {\n      keys = [split(paths, this.delimiter)]\n    } else if (paths.toString() === '[object Object]') {\n      for (const key in paths) {\n        if (!paths.hasOwnProperty(key)) continue\n        keys.push(split(paths[key], this.delimiter))\n      }\n    } else {\n      return paths\n    }\n    return keys\n  }\n\n  observe (force) {\n    if (this.components.length === 0 && !force) return\n    if (this.cancelObserver) return\n\n    const observer = this.dataObserver\n    const keys = this.keys\n    const listener = this.updateComponents.bind(this)\n    this.cancelDataListener = observer.attachObserver(keys, listener)\n  }\n\n  unobserve () {\n    if (!this.cancelDataListener) return\n    this.cancelDataListener()\n    delete this.cancelDataListener\n  }\n\n  listenUnmount (component, onUnmount) {\n    if (Array.isArray(component)) return () => {}\n    const componentWillUnmount = component.componentWillUnmount\n    component.componentWillUnmount = () => {\n      onUnmount()\n      if (typeof this.componentWillUnmount === 'function') {\n        this.componentWillUnmount.call(component)\n      }\n    }\n    component.componentWillUnmount.__original = componentWillUnmount\n  }\n\n  unlistenUnmount (component) {\n    const componentWillUnmount = component.componentWillUnmount\n    if (!componentWillUnmount) return\n    const original = component.componentWillUnmount.__original\n    if (!original) return\n    component.componentWillUnmount = original\n  }\n\n  dataTransformer (func) {\n    if (typeof func === 'function') {\n      this._dataTransformers.push(func)\n      this.updateComponents()\n      return () => {\n        const idx = this._dataTransformers.indexOf(func)\n        if (idx > -1) this._dataTransformers.splice(idx, 1)\n      }\n    }\n    return () => {}\n  }\n\n  get dataTransformers () {\n    return this._dataTransformers.slice(0)\n  }\n\n  applyDataTransformers (data) {\n    this._dataTransformers.forEach((func) => {\n      try {\n        data = func(data)\n      } catch (ex) {\n        console.log(func, 'failing to transform', data)\n      }\n    })\n    return data\n  }\n\n  updateData () {\n    let data = {}\n    let paths = this.paths\n\n    if (typeof paths === 'string') {\n      paths = split(paths, this.delimiter)\n      data = this.store.get(paths)\n    } else if (Array.isArray(paths)) {\n      data = paths.map((path) => {\n        const key = split(path, this.delimiter)\n        return this.store.get(key)\n      })\n    } else {\n      for (const key in paths) {\n        const path = split(paths[key], this.delimiter)\n        data[key] = this.store.get(path)\n      }\n    }\n\n    data = this.applyDataTransformers(data)\n\n    if (typeof data === 'object') {\n      data = freezeObject(deepmerge({}, data))\n    }\n\n    this._data = data\n  }\n\n  get data () {\n    if (!this._data) {\n      this.updateData()\n    }\n    return this._data\n  }\n\n  updateComponents () {\n    this.updateData()\n    this.components.forEach((component) => {\n      this.assignState(component)\n    })\n    this.executeAfterUpdate()\n  }\n\n  assignStateFC (component, initialAssignment) {\n    let setState\n    if (Array.isArray(component)) {\n      setState = component[1]\n    }\n    if (!setState) return\n    if (initialAssignment) return true\n    component[0] = this._data\n    setState(this._data)\n    return true\n  }\n\n  assignStateCC (component, initialAssignment) {\n    if (typeof component.setState !== 'function') return\n    if (initialAssignment) {\n      component.state = component.state || {}\n      component.state.store = component.state.store || {}\n      component.state.store = {\n        ...component.state.store,\n        ...this.data\n      }\n    } else {\n      component.setState({\n        ...component.state,\n        store: {\n          ...component.state.store,\n          ...this.data\n        }\n      })\n    }\n    return true\n  }\n\n  assignStateOthers (component) {\n    if (typeof component === 'object') {\n      component.data = this.data\n    }\n  }\n\n  assignState (component, initial = false) {\n    const updatedSC = this.assignStateFC(component, initial)\n    const updatedCC = this.assignStateCC(component, initial)\n    if (!updatedSC && !updatedCC) {\n      this.assignStateOthers(component, initial)\n    }\n  }\n\n  onUpdate (func) {\n    if (typeof func === 'function') {\n      this._afterUpdateEvents.push(func)\n      return () => {\n        const idx = this._afterUpdateEvents.indexOf(func)\n        if (idx > -1) this._afterUpdateEvents.splice(idx, 1)\n      }\n    }\n    return () => {}\n  }\n\n  get afterUpdateEvents () {\n    return this._afterUpdateEvents.slice(0)\n  }\n\n  executeAfterUpdate () {\n    this._afterUpdateEvents.forEach((func) => {\n      try {\n        func(this.data)\n      } catch (ex) {\n        console.log(ex)\n      }\n    })\n  }\n\n  get hasDataListener () {\n    return !!this.cancelDataListener\n  }\n\n  addMark (component, mark) {\n    let comp = component\n    if (Array.isArray(component)) {\n      comp = component[1]\n    }\n    comp.__segment = mark\n  }\n\n  removeMark (component) {\n    let comp = component\n    if (Array.isArray(component)) {\n      comp = component[1]\n    }\n    delete comp.__segment\n  }\n}\n\nexport default SegmentHelper\n","import identifier from './id'\nimport SegmentHelper from './segment-helper'\n\nclass Segment {\n  constructor (paths, id, delimiter, store, dataObserver) {\n    this.id = id || identifier()\n    this.paths = paths\n\n    this._helper = new SegmentHelper(paths, delimiter, store, dataObserver)\n\n    this.delimiter = delimiter\n    this.store = store\n    this.dataObserver = dataObserver\n  }\n\n  findComponent (search) {\n    if (!this._helper) return -1\n    if (Array.isArray(search)) {\n      search = search[1]\n    }\n    const components = this._helper.components\n    for (let i = 0; i < components.length; i++) {\n      let component = components[i]\n      if (Array.isArray(component)) {\n        component = component[1]\n      }\n      if (search === component) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  get data () {\n    if (!this._helper) return {}\n    return this._helper.data\n  }\n\n  get components () {\n    if (!this._helper) return []\n    return this._helper.components.slice(0)\n  }\n\n  get active () {\n    if (!this._helper) return false\n    return this._helper.hasDataListener\n  }\n\n  get afterUpdateEvents () {\n    if (!this._helper) return []\n    return this._helper.afterUpdateEvents\n  }\n\n  get dataTransformers () {\n    if (!this._helper) return []\n    return this._helper.dataTransformers\n  }\n\n  link (component) {\n    if (!component) return {}\n    const helper = this._helper\n    if (!helper) return {}\n    const store = this.store\n    const unlink = store._unlinkComponentFromAllSegments.bind(store, component)\n    const result = [this.data, unlink]\n    if (this.findComponent(component) > -1) return result\n    helper.components.push(component)\n    helper.observe(this.keepSyncing)\n    helper.addMark(component, this)\n    helper.listenUnmount(component, unlink)\n    helper.assignState(component, true)\n    return result\n  }\n\n  unlink (component) {\n    if (!component) return false\n    const helper = this._helper\n    if (!helper) return false\n    const idx = this.findComponent(component)\n    if (idx > -1) {\n      helper.removeMark(component)\n      helper.components.splice(idx, 1)\n      helper.unlistenUnmount(component)\n    }\n    if ((helper.components.length === 0) && !this.keepSyncing) {\n      helper.unobserve()\n    }\n    return idx > -1\n  }\n\n  sync (on = true) {\n    if (!this._helper) return false\n    this.keepSyncing = on\n    if (on && !this.active) {\n      this._helper.observe(true)\n    }\n    if (!on && this.active) {\n      this._helper.unobserve()\n    }\n    return true\n  }\n\n  unlinkAll () {\n    if (!this._helper) return false\n    this._helper.components.forEach(this.unlink.bind(this))\n    return true\n  }\n\n  onUpdate (func) {\n    if (!this._helper) return () => {}\n    return this._helper.onUpdate(func)\n  }\n\n  dataTransformer (func) {\n    if (!this._helper) return () => {}\n    return this._helper.dataTransformer(func)\n  }\n\n  teardown () {\n    if (!this._helper) return true\n    this.unlinkAll()\n    this._helper.unobserve()\n    delete this._helper\n    delete this.dataObserver\n    this.store.removeSegment(this)\n    return true\n  }\n}\n\nexport default Segment\n","import { split } from './object-utils'\nclass DataObserver {\n  constructor (store) {\n    this.store = store\n    this.listeners = {}\n    this.counter = 0\n  }\n\n  attachObserver (keys, listener) {\n    if (!listener) return\n    if (!keys || keys.length === 0) return\n    ++this.counter\n    const id = `data-slice:${this.counter}`\n    this.listeners[id] = {\n      keys,\n      listener\n    }\n    return () => {\n      delete this.listeners[id]\n    }\n  }\n\n  dataUpdatedAt (changedKey) {\n    const seperator = '>>'\n    const targets = []\n    const changedPath = split(changedKey).join(seperator)\n    for (const id in this.listeners) {\n      let { keys, listener } = this.listeners[id]\n      keys = keys.filter((key) => {\n        const keyPath = split(key).join(seperator)\n        return keyPath.startsWith(changedPath) || changedPath.startsWith(keyPath)\n      })\n      if (keys.length > 0) targets.push([keys, listener])\n    }\n    targets.forEach(([keys, listener]) => {\n      try {\n        listener(keys)\n      } catch (ex) {\n        console.log('Error updating', listener, keys)\n      }\n    })\n  }\n\n  teardown () {\n    this.listeners = {}\n  }\n}\nexport default DataObserver\n","import Segment from './segment'\nimport DataObserver from './data-observer'\nimport { sort, get, set, coalesce, empty, insert, push, pop, shift, splice, unshift, ensureExists, del, has, merge, increment, decrement, toggle, isEqual, slice } from './object-utils'\n\nexport class ClearX {\n  constructor (data) {\n    this.data = data\n    this.segments = []\n    this.dataObserver = new DataObserver(this)\n    this.delimiter = '.'\n    this.onUpdateEvents = []\n  }\n\n  triggerEvents (key) {\n    this.dataObserver.dataUpdatedAt(key)\n  }\n\n  executeUtil (key, [status, changed, value]) {\n    if (changed) {\n      this.triggerEvents(key)\n    }\n    this.executeOnUpdateEvents(changed, key)\n    return status\n  }\n\n  get (key, defaultValue) {\n    return get(this.data, key, defaultValue)\n  }\n\n  set (key, value, doNotReplace = false) {\n    return this.executeUtil(key, set(this.data, key, value, doNotReplace))\n  }\n\n  coalesce (keys, defaultValue) {\n    return coalesce(this.data, keys, defaultValue)\n  }\n\n  empty (key) {\n    return this.executeUtil(key, empty(this.data, key))\n  }\n\n  insert (key, value, position) {\n    return this.executeUtil(key, insert(this.data, key, value, position))\n  }\n\n  push (key, ...values) {\n    return this.executeUtil(key, push(this.data, key, ...values))\n  }\n\n  unshift (key, ...values) {\n    return this.executeUtil(key, unshift(this.data, key, ...values))\n  }\n\n  pop (key) {\n    return this.executeUtil(key, pop(this.data, key))\n  }\n\n  shift (key) {\n    return this.executeUtil(key, shift(this.data, key))\n  }\n\n  splice (key, ...args) {\n    return this.executeUtil(key, splice(this.data, key, ...args))\n  }\n\n  slice (key, ...args) {\n    return slice(this.data, key, ...args)\n  }\n\n  sort (key, ...args) {\n    return this.executeUtil(key, sort(this.data, key, ...args))\n  }\n\n  ensureExists (key, defaultValue) {\n    return this.executeUtil(key, ensureExists(this.data, key, defaultValue))\n  }\n\n  delete (key) {\n    return this.executeUtil(key, del(this.data, key))\n  }\n\n  has (key) {\n    return has(this.data, key)\n  }\n\n  merge (key, data) {\n    return this.executeUtil(key, merge(this.data, key, data))\n  }\n\n  increment (key, by) {\n    return this.executeUtil(key, increment(this.data, key, by))\n  }\n\n  decrement (key, by) {\n    return this.executeUtil(key, decrement(this.data, key, by))\n  }\n\n  toggle (key) {\n    return this.executeUtil(key, toggle(this.data, key))\n  }\n\n  isEqual (key, value) {\n    return isEqual(this.data, key, value)\n  }\n\n  paths (keys, id) {\n    const segment = new Segment(keys, id, this.delimiter, this, this.dataObserver)\n    this.segments.push(segment)\n    return segment\n  }\n\n  bind (options = {}) {\n    const { to, afterUpdate, id, paths, dataTransformer } = options\n    let component = to\n    if (Array.isArray(component)) {\n      component = to[1]\n    }\n    let segment\n    segment = component.__segment\n    if (segment) {\n      return segment.link(to)\n    }\n    segment = this.paths(paths, id, this.delimiter)\n    segment.onUpdate(afterUpdate)\n    segment.dataTransformer(dataTransformer)\n    const link = segment.link(to)\n\n    if (Array.isArray(to)) {\n      return link\n    }\n    return segment\n  }\n\n  removeSegment (segment) {\n    const index = this.segments.indexOf(segment)\n    if (index > -1) {\n      segment.teardown()\n      this.segments.splice(index, 1)\n      return true\n    }\n    return false\n  }\n\n  onUpdate (func) {\n    if (typeof func === 'function') {\n      this.onUpdateEvents.push(func)\n      return () => {\n        const idx = this.onUpdateEvents.indexOf(func)\n        if (idx > -1) this.onUpdateEvents.splice(idx, 1)\n      }\n    }\n    return () => {}\n  }\n\n  executeOnUpdateEvents (changed, changedKeys) {\n    this.onUpdateEvents.forEach((func) => {\n      try {\n        func(changed, changedKeys, this.data, this)\n      } catch (ex) {\n        console.log('onUpdate', func, changedKeys)\n      }\n    })\n  }\n\n  _unlinkComponentFromAllSegments (component) {\n    this.segments.forEach((segment) => {\n      segment.unlink(component)\n    })\n  }\n\n  teardown () {\n    this.segments.forEach((segment) => {\n      segment.teardown()\n    })\n    this.dataObserver.teardown()\n    delete this.dataObserver\n    this.data = {}\n    return true\n  }\n}\n\n"],"names":["counter","generate","toNumber","val","isNaN","assign","obj","key","hasEqual","freezeObject","Object","freeze","obj1","obj2","split","path","seperator","escape","Array","isArray","keys","i","l","length","charKey","push","get","defaultValue","remaining","set","value","dontReplace","isDataUpdated","next","hasOwnProperty","_","__","has","ensureExists","arrayMethods","arrayOps","method","args","indexOf","arr","apply","ex","values","insert","at","unshift","pop","shift","splice","slice","result","sort","increment","by","decrement","toggle","existing","empty","finalValue","coalesce","keysArr","del","len","merge","data","current","merged","isEqual","SegmentHelper","constructor","paths","delimiter","store","dataObserver","components","_afterUpdateEvents","_dataTransformers","toString","observe","force","cancelObserver","observer","listener","updateComponents","bind","cancelDataListener","attachObserver","unobserve","listenUnmount","component","onUnmount","componentWillUnmount","call","__original","unlistenUnmount","original","dataTransformer","func","idx","dataTransformers","applyDataTransformers","forEach","console","log","updateData","map","_data","assignState","executeAfterUpdate","assignStateFC","initialAssignment","setState","assignStateCC","state","assignStateOthers","initial","updatedSC","updatedCC","onUpdate","afterUpdateEvents","hasDataListener","addMark","mark","comp","__segment","removeMark","Segment","id","identifier","_helper","findComponent","search","active","link","helper","unlink","_unlinkComponentFromAllSegments","keepSyncing","sync","on","unlinkAll","teardown","removeSegment","DataObserver","listeners","dataUpdatedAt","changedKey","targets","changedPath","join","filter","keyPath","startsWith","ClearX","segments","onUpdateEvents","triggerEvents","executeUtil","status","changed","executeOnUpdateEvents","doNotReplace","position","delete","segment","options","to","afterUpdate","index","changedKeys"],"mappings":"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"}